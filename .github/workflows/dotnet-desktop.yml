name: Deploy latest version to Github Releases

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 10 SDK
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "10.0.x"

      - name: Set version
        run: |
          version="1.0.${{ github.run_number }}"
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Using version $version"

      - name: Publish EFT
        run: |
          dotnet publish src/Lone-EFT-DMA-Radar/Lone-EFT-DMA-Radar.csproj \
            -c Release \
            -r win-x64 \
            --no-self-contained \
            /p:PublishSingleFile=true \
            /p:DebugType=none \
            /p:EnableWindowsTargeting=true \
            /p:AssemblyVersion=$VERSION \
            /p:FileVersion=$VERSION \
            -o out-eft
            
      - name: Publish Arena
        run: |
          dotnet publish src/Lone-Arena-DMA-Radar/Lone-Arena-DMA-Radar.csproj \
            -c Release \
            -r win-x64 \
            --no-self-contained \
            /p:PublishSingleFile=true \
            /p:DebugType=none \
            /p:EnableWindowsTargeting=true \
            /p:AssemblyVersion=$VERSION \
            /p:FileVersion=$VERSION \
            -o out-arena

      - name: Archive publish output
        run: |
          cd out-eft
          zip -r ../lone-eft-dma-radar.zip .
          cd ../out-arena
          zip -r ../lone-arena-dma-radar.zip .

      - name: Upload to "latest" release (overwrite old asset)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload latest lone-eft-dma-radar.zip --clobber
          gh release upload latest lone-arena-dma-radar.zip --clobber
